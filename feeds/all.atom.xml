<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>It's automatic!</title><link href="https://automaticdavid.github.io/" rel="alternate"></link><link href="https://automaticdavid.github.io/feeds/all.atom.xml" rel="self"></link><id>https://automaticdavid.github.io/</id><updated>2020-04-20T00:00:00+02:00</updated><entry><title>Personal picks for Summit 2020</title><link href="https://automaticdavid.github.io/personal-picks-for-summit-2020.html" rel="alternate"></link><published>2020-04-20T00:00:00+02:00</published><updated>2020-04-20T00:00:00+02:00</updated><author><name>@automaticdavid</name></author><id>tag:automaticdavid.github.io,2020-04-20:/personal-picks-for-summit-2020.html</id><summary type="html">&lt;p&gt;There's a looooot of sessions at the &lt;a href="https://www.redhat.com/en/summit"&gt;Red Hat Summit 2020&lt;/a&gt; but on the plus side it's a free virtual experience, so register now! I picked the following Automation sessions for myself and thought I would share. All those are CEST times.&lt;br&gt;
You can view the full catalogue at: &lt;a href="https://summit.redhat.com/conference/sessions"&gt;https …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;There's a looooot of sessions at the &lt;a href="https://www.redhat.com/en/summit"&gt;Red Hat Summit 2020&lt;/a&gt; but on the plus side it's a free virtual experience, so register now! I picked the following Automation sessions for myself and thought I would share. All those are CEST times.&lt;br&gt;
You can view the full catalogue at: &lt;a href="https://summit.redhat.com/conference/sessions"&gt;https://summit.redhat.com/conference/sessions&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Let's kick off the summit with an evening of roadmaps and long term vision:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Tuesday, April 28, 5:00 p.m.&lt;br&gt;
&lt;strong&gt;Red Hat Ansible Automation Platform overview and roadmap&lt;/strong&gt; &lt;br&gt;
&lt;a href="https://summit.redhat.com/conference/sessions/details/1e449272-5744-4b85-9418-9c621c0836e2?sb=false"&gt;https://summit.redhat.com/conference/sessions/details/1e449272-5744-4b85-9418-9c621c0836e2?sb=false&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tuesday, April 28, 7:00 p.m.&lt;br&gt;
&lt;strong&gt;Red Hat Management strategy and roadmap&lt;/strong&gt; &lt;br&gt;
&lt;a href="https://summit.redhat.com/conference/sessions/details/8cf6c4c6-f5bd-4c82-bdf2-b3239816c9fc?sb=false"&gt;https://summit.redhat.com/conference/sessions/details/8cf6c4c6-f5bd-4c82-bdf2-b3239816c9fc?sb=false&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tuesday, April 28, 8:00 p.m. &lt;br&gt;
&lt;strong&gt;Value of an automation platform—more than just the Ansible you know today&lt;/strong&gt; &lt;br&gt;
&lt;a href="https://summit.redhat.com/conference/sessions/details/01a0adff-3130-46f0-9cc4-37fbbe33ae00?sb=false"&gt;https://summit.redhat.com/conference/sessions/details/01a0adff-3130-46f0-9cc4-37fbbe33ae00?sb=false&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On the next day, let's have an Ansible Breakfast: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Wednesday, April 29, 7:00 a.m. &lt;br&gt;
&lt;strong&gt;What does it take to build, certify and publish Ansible Content Collections?&lt;/strong&gt; &lt;br&gt;
&lt;a href="https://summit.redhat.com/conference/sessions/details/0ead96e4-a706-4842-aff5-941d4621dfe2?sb=false"&gt;https://summit.redhat.com/conference/sessions/details/0ead96e4-a706-4842-aff5-941d4621dfe2?sb=false&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Wednesday, April 29, 10:00 a.m. &lt;br&gt;
&lt;strong&gt;Lights, camera, action—automating broadcast media&lt;/strong&gt; &lt;br&gt;
&lt;a href="https://summit.redhat.com/conference/sessions/details/410a9560-7e10-4d43-8945-238938480a1c?sb=false"&gt;https://summit.redhat.com/conference/sessions/details/410a9560-7e10-4d43-8945-238938480a1c?sb=false&lt;/a&gt; &lt;br&gt;
Or alternatively at the same time slot: &lt;br&gt;
&lt;strong&gt;Optimizing DevSecOps: Visibility &amp;amp; control with IBM &amp;amp; Red Hat&lt;/strong&gt; &lt;br&gt;
&lt;a href="https://summit.redhat.com/conference/sessions/details/eb0e068b-4dee-4d55-b6b2-e4830e11f3ba?sb=false"&gt;https://summit.redhat.com/conference/sessions/details/eb0e068b-4dee-4d55-b6b2-e4830e11f3ba?sb=false&lt;/a&gt;   &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then for Wednesday afernoon:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Wednesday, April 29, 1:00 p.m. &lt;br&gt;
&lt;strong&gt;3 ways to reduce remediation time to cyberattacks with Ansible security automation&lt;/strong&gt; &lt;br&gt;
&lt;a href="https://summit.redhat.com/conference/sessions/details/91eb9e8a-3422-4e8f-9a28-56cc1632c72e?sb=false"&gt;https://summit.redhat.com/conference/sessions/details/91eb9e8a-3422-4e8f-9a28-56cc1632c72e?sb=false&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Wednesday, April 29, 5:00 p.m. &lt;br&gt;
&lt;strong&gt;Automating Windows in a highly secure environment&lt;/strong&gt; &lt;br&gt;
&lt;a href="https://summit.redhat.com/conference/sessions/details/24f7193a-7fe2-4eb5-9942-05e38a128d3a?sb=false"&gt;https://summit.redhat.com/conference/sessions/details/24f7193a-7fe2-4eb5-9942-05e38a128d3a?sb=false&lt;/a&gt; &lt;br&gt;
Or alternatively at the same time slot: &lt;br&gt;
&lt;strong&gt;Case study: Changing governed IT processes to automation, and reinventing IT Ops as site reliability engineering&lt;/strong&gt; &lt;br&gt;
&lt;a href="https://summit.redhat.com/conference/sessions/details/5272be68-7da0-4ba9-af89-9178c92af69f?sb=false"&gt;https://summit.redhat.com/conference/sessions/details/5272be68-7da0-4ba9-af89-9178c92af69f?sb=false&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can also register for labs where you'll get your own test infra to use in a guided session. More on that later I hope! &lt;/p&gt;</content><category term="Personal"></category></entry><entry><title>Using conditional import of external vars with Tower's Smart Inventories</title><link href="https://automaticdavid.github.io/using-conditional-import-of-external-vars-with-towers-smart-inventories.html" rel="alternate"></link><published>2019-10-20T00:00:00+02:00</published><updated>2019-10-20T00:00:00+02:00</updated><author><name>@automaticdavid</name></author><id>tag:automaticdavid.github.io,2019-10-20:/using-conditional-import-of-external-vars-with-towers-smart-inventories.html</id><summary type="html">&lt;p&gt;The problem we are trying to solve is that smart inventories in Tower do not include groups, and therefore we can't use group_vars defined at the inventories level. Since host_vars are imported we will use a host_var to trigger import of the wanted vars.&lt;/p&gt;
&lt;h2&gt;1- VM Properties&lt;/h2&gt;
&lt;p&gt;We're going to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The problem we are trying to solve is that smart inventories in Tower do not include groups, and therefore we can't use group_vars defined at the inventories level. Since host_vars are imported we will use a host_var to trigger import of the wanted vars.&lt;/p&gt;
&lt;h2&gt;1- VM Properties&lt;/h2&gt;
&lt;p&gt;We're going to use the "Custom Attributes" feature of vSphere to inherit a host_vars. Each VM has a custom attribute &lt;code&gt;dcl-custom-attr&lt;/code&gt; but with a diferent value for each of our test VMs:&lt;/p&gt;
&lt;p&gt;&lt;img alt="VM Custom prop" src="https://automaticdavid.github.io/images/custom-prop.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="VM Custom prop" src="https://automaticdavid.github.io/images/custom-prop-2.png"&gt;&lt;/p&gt;
&lt;h2&gt;2- Dynamic Inventory &amp;amp; Smart Inventory in Tower&lt;/h2&gt;
&lt;p&gt;We're using the VMware dynamic inventory with source variables: &lt;/p&gt;
&lt;p&gt;&lt;img alt="VM Custom prop" src="https://automaticdavid.github.io/images/inv.png"&gt;&lt;/p&gt;
&lt;p&gt;We want to test importing vars for hosts sourced from a smart inventory so we define a smart inventory:&lt;/p&gt;
&lt;p&gt;&lt;img alt="VM Custom prop" src="https://automaticdavid.github.io/images/smart.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="VM Custom prop" src="https://automaticdavid.github.io/images/smart-hosts.png"&gt;&lt;/p&gt;
&lt;p&gt;The VMs in the smart inventory show the custom attributes as host_vars:&lt;/p&gt;
&lt;p&gt;&lt;img alt="VM Custom prop" src="https://automaticdavid.github.io/images/vars.png"&gt;&lt;/p&gt;
&lt;h2&gt;3- Conditional include of vars&lt;/h2&gt;
&lt;p&gt;Now we can use the following playbook:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;---&lt;/span&gt;
&lt;span class="x"&gt;- name: Conditional vars inclusion based on host_vars &lt;/span&gt;
&lt;span class="x"&gt;  hosts: all&lt;/span&gt;
&lt;span class="x"&gt;  gather_facts: no&lt;/span&gt;

&lt;span class="x"&gt;  tasks:&lt;/span&gt;

&lt;span class="x"&gt;    - name: Extract Custom Prop Value&lt;/span&gt;
&lt;span class="x"&gt;      set_fact:&lt;/span&gt;
&lt;span class="x"&gt;        vm_props: &amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nf"&gt;map&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;attribute&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)|&lt;/span&gt; &lt;span class="nf"&gt;list&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="x"&gt;    - name: Include for first group&lt;/span&gt;
&lt;span class="x"&gt;      include_vars:&lt;/span&gt;
&lt;span class="x"&gt;        file: first.yml&lt;/span&gt;
&lt;span class="x"&gt;      when: &amp;#39;&amp;quot;dcl-1&amp;quot; in vm_props&amp;#39;&lt;/span&gt;

&lt;span class="x"&gt;    - name: Include for second group&lt;/span&gt;
&lt;span class="x"&gt;      include_vars:&lt;/span&gt;
&lt;span class="x"&gt;        file: second.yml&lt;/span&gt;
&lt;span class="x"&gt;      when: &amp;#39;&amp;quot;dcl-2&amp;quot; in vm_props&amp;#39;&lt;/span&gt;

&lt;span class="x"&gt;    - name: Display imported value&lt;/span&gt;
&lt;span class="x"&gt;      debug: &lt;/span&gt;
&lt;span class="x"&gt;        msg: &amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;my_imported_value&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Depending on the value of the host_var we include a file or another, that defines the variable &lt;code&gt;my_imported_value&lt;/code&gt; but with different values. &lt;BR&gt;
See: https://github.com/automaticdavid/set_vars&lt;/p&gt;
&lt;p&gt;We define the associated Tower template:&lt;/p&gt;
&lt;p&gt;&lt;img alt="VM Custom prop" src="https://automaticdavid.github.io/images/template.png"&gt;&lt;/p&gt;
&lt;p&gt;Execution yields the inclusion of the var with the correct value for each VM: &lt;/p&gt;
&lt;p&gt;&lt;img alt="VM Custom prop" src="https://automaticdavid.github.io/images/result.png"&gt;&lt;/p&gt;
&lt;p&gt;We can use the same mechanism to include different vars for each VM.&lt;/p&gt;
&lt;p&gt;This could be used in a role that would get included at the begining of each playbook, or with a Tower Workflow. &lt;/p&gt;</content><category term="Tower"></category></entry><entry><title>Configure an SSH proxy for Ansible Tower</title><link href="https://automaticdavid.github.io/configure-an-ssh-proxy-for-ansible-tower.html" rel="alternate"></link><published>2019-04-19T00:00:00+02:00</published><updated>2019-04-19T00:00:00+02:00</updated><author><name>@automaticdavid</name></author><id>tag:automaticdavid.github.io,2019-04-19:/configure-an-ssh-proxy-for-ansible-tower.html</id><summary type="html">&lt;p&gt;In my lab, some of the VMs I provision are only accessible through a jump host. This means Tower needs to connect to the jump host first then to the target VMs in order to run playbooks. &lt;/p&gt;
&lt;p&gt;One way to enable Tower to reach isolated nodes is to use a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In my lab, some of the VMs I provision are only accessible through a jump host. This means Tower needs to connect to the jump host first then to the target VMs in order to run playbooks. &lt;/p&gt;
&lt;p&gt;One way to enable Tower to reach isolated nodes is to use a dedicated ansible host, that is both accessible by Tower and able to reach the target network. This is called an isolated node and the way to set it up is described at: &lt;a href="http://docs.ansible.com/ansible-tower/latest/html/administration/clustering.html#isolated-instance-groups"&gt;6.3. Isolated Instance Groups&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Isolated nodes will have Ansible installed on them, and sometimes that's not possible on the jump host. But you can also configure Tower to use the jump host as an ssh proxy: Tower will ssh to the jump host and from it access the targets. This is documented at: &lt;a href="http://docs.ansible.com/ansible-tower/latest/html/administration/tipsandtricks.html#setting-up-a-jump-host-to-use-with-tower"&gt;22.6. Setting up a jump host to use with Tower&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I had some problems getting it to work so decided to document what I did. &lt;/p&gt;
&lt;h3&gt;1. Disable PRoot&lt;/h3&gt;
&lt;p&gt;As described in the "Tower Tips and Tricks" official documentation page.&lt;/p&gt;
&lt;h3&gt;2. Add SSH connection arguments at the inventory level&lt;/h3&gt;
&lt;p&gt;I added the following variables at the inventory level:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ansible_connection&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ssh&lt;/span&gt;
&lt;span class="n"&gt;ansible_ssh_common_args&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;-o ProxyCommand=&amp;quot;ssh -W %h:%p -q jump-host-user@jump-host.example.com&amp;quot;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Defining those at the inventory level means that only the hosts of that inventory will be using the jump host. And it also means you don't have to edit SSH configuration files on the Tower host.&lt;/p&gt;
&lt;h3&gt;3. Add the SSH private key of the jump host to Tower&lt;/h3&gt;
&lt;p&gt;Tower will use it to ssh to the jump host: copy the &lt;code&gt;id_rsa&lt;/code&gt; file of the jump host on the tower host into &lt;code&gt;/var/lib/awx/.ssh/&lt;/code&gt;
Make sure it has the following user, group and permissions:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;-rw-------. 1 awx awx 1679 Apr 30 16:37 id_rsa&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can also put the key in another directory and specify its path using the -i switch of the ProxyCommand.&lt;/p&gt;
&lt;h3&gt;4. Add the credentials for the target machine&lt;/h3&gt;
&lt;p&gt;Once connected to the jump host, Tower needs to connect to the target machine. 
I defined a Tower Machine Credential, in my case for the root user (of the target node) using a password to connect.
You can also use an ssh key if your target nodes support it, as with any machine credentials.&lt;/p&gt;
&lt;h3&gt;5. Define the Job Template&lt;/h3&gt;
&lt;p&gt;The tower template needs to have: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The inventory used in 2&lt;/li&gt;
&lt;li&gt;The machine credential defined in 4.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And it works ! Thanks to &lt;a href="https://github.com/victorock"&gt;@victorock&lt;/a&gt; ;)&lt;/p&gt;</content><category term="Tower"></category></entry></feed>